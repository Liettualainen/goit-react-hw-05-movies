{"version":3,"file":"static/js/779.c45422d7.chunk.js","mappings":"iQAGaA,E,OAAcC,EAAAA,EAAH,0I,SC0CxB,EApCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,IAAaP,EAAS,WAF9B,OAETQ,EAFS,OAGTC,EAAOD,EAASC,KAAKC,QAC3BN,EAAWK,GAJI,gDAMfE,QAAQC,IAAR,MANe,yDAAH,qDAShBN,GACD,GAAE,CAACN,KAEF,8BACGG,EAAQU,OAAS,GAChB,wBACGV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,oCAAYF,MACZ,SAACjB,EAAD,UAAckB,MAFPC,EAKZ,OAGH,uCAIP,C,4ICzCKC,EAAW,gCACXC,EAAM,mCAEZ,SAASC,IACP,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oBAAyC,CAC9CI,OAAQ,CACNC,QAASJ,IAGd,CAED,SAASK,EAAgBC,GACvB,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1CI,OAAQ,CACNC,QAASJ,EACTM,MAAAA,IAGL,CAED,SAASC,EAAgBT,GACvB,OAAOI,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BD,GAAM,CACzCK,OAAQ,CACNC,QAASJ,IAGd,CAED,SAASZ,EAAaU,EAAIU,GACxB,OAAON,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BD,EAA9B,YAAoCU,GAAQ,CACjDL,OAAQ,CACNC,QAASJ,IAGd,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/moviesDB.jsx"],"sourcesContent":["\nimport styled from '@emotion/styled';\n\nexport const ReviewsText = styled.p`\n  display: inline-block;\n  width: 400px;\n  border: 1px solid;\n  padding: 2px 5px;\n  text-overflow: ellipsis;\n`;","import React from 'react';\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieInfo } from 'services/moviesDB';\n\nimport { ReviewsText } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await getMovieInfo(movieId, 'reviews');\n        const data = response.data.results;\n        setReviews(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <ReviewsText>{content}</ReviewsText>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No reviews</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '3755b5a74791c7c24db924897f5b67df';\n\nfunction getTrendsMovies() {\n  return axios.get(`${BASE_URL}trending/all/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n}\n\nfunction getSearchMovies(query) {\n  return axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n}\n\nfunction getMovieDetails(id) {\n  return axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n}\n\nfunction getMovieInfo(id, info) {\n  return axios.get(`${BASE_URL}movie/${id}/${info}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n}\n\nexport { getTrendsMovies, getSearchMovies, getMovieDetails, getMovieInfo };\n"],"names":["ReviewsText","styled","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovie","getMovieInfo","response","data","results","console","log","length","map","author","content","id","BASE_URL","KEY","getTrendsMovies","axios","params","api_key","getSearchMovies","query","getMovieDetails","info"],"sourceRoot":""}