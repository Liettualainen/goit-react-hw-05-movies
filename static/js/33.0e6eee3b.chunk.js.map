{"version":3,"file":"static/js/33.0e6eee3b.chunk.js","mappings":"4RAGaA,EAAaC,EAAAA,EAAAA,IAAH,+DAKVC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,wUAgBTG,EAAWH,EAAAA,EAAAA,IAAH,kFAMRI,EAAWJ,EAAAA,EAAAA,IAAH,wDAIRK,EAAYL,EAAAA,EAAAA,GAAH,oEAITM,EAAON,EAAAA,EAAAA,GAAH,6EAKJO,GAAWP,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,ukB,SCkBrB,EApDqB,WAAO,IAAD,IACjBQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACzCC,QAAQC,IAAIL,IAEZM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,IAAgBb,GAFxB,OAETc,EAFS,OAGTC,EAAOD,EAASC,KACtBX,EAASW,GAJM,gDAMfN,QAAQC,IAAR,MANe,yDAAH,qDAShBE,GACD,GAAE,CAACZ,IAEJ,IAAMgB,EAAO,UAtBA,mCAsBA,OAAeb,EAAMc,aAC5BC,EAAWf,EAAMc,YAEvB,OACE,UAAC1B,EAAD,YACE,SAACE,EAAD,CAAW0B,GAAId,EAAf,sBAEA,UAACV,EAAD,YACE,gBAAKyB,IAAKF,GAAYF,EAASK,IAAKlB,EAAMmB,MAAOC,MAAO,OACxD,UAAC3B,EAAD,YACE,SAACC,EAAD,UAAYM,EAAMmB,SAClB,UAACxB,EAAD,YACE,yBACE,SAACC,EAAD,CAAUoB,GAAG,OAAOZ,MAAO,CAAEC,KAAK,GAAD,OAAKH,IAAtC,qBAIF,yBACE,SAACN,EAAD,CAAUoB,GAAG,UAAUZ,MAAO,CAAEC,KAAK,GAAD,OAAKH,IAAzC,2BAKJ,SAAC,EAAAmB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,cAMX,C,4ICzDKC,EAAW,gCACXC,EAAM,mCAEZ,SAASC,IACP,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oBAAyC,CAC9CI,OAAQ,CACNC,QAASJ,IAGd,CAED,SAASK,EAAgBC,GACvB,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1CI,OAAQ,CACNC,QAASJ,EACTM,MAAAA,IAGL,CAED,SAASpB,EAAgBqB,GACvB,OAAOL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BQ,GAAM,CACzCJ,OAAQ,CACNC,QAASJ,IAGd,CAED,SAASQ,EAAaD,EAAIE,GACxB,OAAOP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BQ,EAA9B,YAAoCE,GAAQ,CACjDN,OAAQ,CACNC,QAASJ,IAGd,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/moviesDB.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const DatailWrap = styled.div`\n  margin-top: 20px;\n  padding: 15px;\n`;\n\nexport const DetailBtn = styled(NavLink)`\n  background: #5e5df0;\n  border-radius: 999px;\n  box-shadow: #5e5df0 0 10px 20px -10px;\n  box-sizing: border-box;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 24px;\n  opacity: 1;\n  outline: 0 solid transparent;\n  padding: 8px 18px;\n  border: 0;\n`;\n\nexport const FilmCard = styled.div`\n  margin: 0 auto;\n  margin-top: 20px;\n  display: flex;\n`;\n\nexport const FilmInfo = styled.div`\ndisplayL flex;\npadding: 15px;\n`;\nexport const FilmTitle = styled.h1`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\nexport const Info = styled.h1`\n  display: flex;\n  list-style: none;\n  gap: 15px;\n`;\nexport const InfoLink = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 6px 14px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;\n  border-radius: 6px;\n  color: #3d3d3d;\n  background: #f33f3f;\n  border: none;\n  box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:focus {\n    box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1),\n      0px 0px 0px 3.5px rgba(58, 108, 217, 0.5);\n    outline: 0;\n  }\n  &:hover {\n  }\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/moviesDB';\n\nimport { DetailBtn, DatailWrap, FilmCard, FilmInfo, FilmTitle, Info, InfoLink, }\n  from './MovieDetails.styled';\n\nconst imgUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  console.log(backLink);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await getMovieDetails(movieId);\n        const data = response.data;\n        setMovie(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const imgPath = `${imgUrl}${movie.poster_path}`;\n  const movieUrl = movie.poster_path;\n\n  return (\n    <DatailWrap>\n      <DetailBtn to={backLink}>Go back</DetailBtn>\n\n      <FilmCard>\n        <img src={movieUrl && imgPath} alt={movie.title} width={400} />\n        <FilmInfo>\n          <FilmTitle>{movie.title}</FilmTitle>\n          <Info>\n            <li>\n              <InfoLink to=\"cast\" state={{ from: `${backLink}` }}>\n                Cast\n              </InfoLink>\n            </li>\n            <li>\n              <InfoLink to=\"reviews\" state={{ from: `${backLink}` }}>\n                Reviews\n              </InfoLink>\n            </li>\n          </Info>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </FilmInfo>\n      </FilmCard>\n    </DatailWrap>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '3755b5a74791c7c24db924897f5b67df';\n\nfunction getTrendsMovies() {\n  return axios.get(`${BASE_URL}trending/all/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n}\n\nfunction getSearchMovies(query) {\n  return axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n}\n\nfunction getMovieDetails(id) {\n  return axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n}\n\nfunction getMovieInfo(id, info) {\n  return axios.get(`${BASE_URL}movie/${id}/${info}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n}\n\nexport { getTrendsMovies, getSearchMovies, getMovieDetails, getMovieInfo };\n"],"names":["DatailWrap","styled","DetailBtn","NavLink","FilmCard","FilmInfo","FilmTitle","Info","InfoLink","movieId","useParams","useState","movie","setMovie","backLink","useLocation","state","from","console","log","useEffect","fetchMovie","getMovieDetails","response","data","imgPath","poster_path","movieUrl","to","src","alt","title","width","Suspense","fallback","BASE_URL","KEY","getTrendsMovies","axios","params","api_key","getSearchMovies","query","id","getMovieInfo","info"],"sourceRoot":""}